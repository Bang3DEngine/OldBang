#include "G.frag_g"

uniform bool  B_usingDistField;
uniform float B_textBlurriness;
uniform float B_textAlphaThreshold;

void Main()
{
    vec2 charAtlasUv = B_FragIn_Uv;
    if (B_usingDistField)
    {
        vec2 uvStep = B_ScreenStep;

        float meanDist =
                (texture2D(B_Texture0, charAtlasUv + uvStep * vec2( 0, 0) ).r +
                 texture2D(B_Texture0, charAtlasUv + uvStep * vec2( 1, 0) ).r +
                 texture2D(B_Texture0, charAtlasUv + uvStep * vec2(-1, 0) ).r +
                 texture2D(B_Texture0, charAtlasUv + uvStep * vec2( 0, 1) ).r +
                 texture2D(B_Texture0, charAtlasUv + uvStep * vec2( 0,-1) ).r) / 5;

        float dist = 1.0f - meanDist;
        B_Out_Color = vec4(vec3(1),
                           smoothstep(B_textAlphaThreshold - B_textBlurriness,
                                      B_textAlphaThreshold + B_textBlurriness,
                                      dist));
        // B_Out_Color = vec4(vec3(dist), 1);
    }
    else
    {
        vec4 charColor = texture2D(B_Texture0, charAtlasUv);
        B_Out_Color = charColor;
    }
}
