#include "G.frag_g"

uniform vec2  B_fontAtlasSize;
uniform bool  B_usingDistField;
uniform float B_textBlurriness;
uniform float B_textAlphaThreshold;

void Main()
{
    vec2 charAtlasUv = B_FragIn_Uv;
    vec4 thisColor = texture2D(B_Texture0, charAtlasUv);
    if (B_usingDistField)
    {
        float closeness = 1.0f - thisColor.r;
        float lowerLimit = B_textAlphaThreshold - B_textBlurriness;
        if (closeness < lowerLimit) { discard; }
        float upperLimit = B_textAlphaThreshold + B_textBlurriness;
        B_Out_Color = vec4(vec3(1), smoothstep(lowerLimit, upperLimit, closeness));
        // B_Out_Color = vec4(vec3(closeness), 1);
    }
    else
    {
        B_Out_Color = vec4(1, 1, 1, thisColor.a);
    }
}
